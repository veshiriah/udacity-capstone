Description:  This is the stack that deploys EKS cluster

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref Role

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        
  EKS:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub "${EnvironmentName}-EKS-Cluster"
      RoleArn: !GetAtt Role.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub "${EnvironmentName}-SecGroup"
        SubnetIds:
          Fn::Split:
            - ","
            - Fn::ImportValue:
                Fn::Sub: ${EnvironmentName}-PublicSubnets
Outputs:
  EKS:
    Description: The ID of EKS
    Value: !Ref EKS
    Export:
      Name: !Sub ${EnvironmentName}-EKS

  EKSRoleArn:
    Description: EKS Role
    Value: !GetAtt Role.Arn
    Export:
      Name: !Sub "${EnvironmentName}-EKSRoleArn"